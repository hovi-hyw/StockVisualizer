# 构建阶段 - 使用特定版本并减少依赖
FROM node:18-alpine as build

# 设置工作目录
WORKDIR /app

# 复制package.json和package-lock.json
COPY ./frontend/package*.json ./

# 安装依赖 - 使用生产模式并清理缓存
RUN npm ci --only=production && \
    npm cache clean --force

# 复制前端源代码
COPY ./frontend/ ./

# 构建前端应用
RUN npm run build

# 生产阶段 - 使用特定版本
FROM nginx:1.25-alpine

# 创建非root用户
RUN addgroup -S appgroup && adduser -S appuser -G appgroup

# 复制构建产物到Nginx服务目录
COPY --from=build /app/build /usr/share/nginx/html

# 复制Nginx配置文件
COPY ./frontend/nginx.conf /etc/nginx/conf.d/default.conf

# 设置适当的权限
RUN chown -R appuser:appgroup /var/cache/nginx /var/log/nginx /etc/nginx/conf.d && \
    touch /var/run/nginx.pid && \
    chown -R appuser:appgroup /var/run/nginx.pid && \
    chmod -R 755 /usr/share/nginx/html

# 切换到非root用户
USER appuser

# 暴露端口
EXPOSE 80

# 启动Nginx
CMD ["nginx", "-g", "daemon off;"]